项目工程 说明文件

1.服务器链接检测URL
	http://7xl54r.dl1.z0.glb.clouddn.com/setting/network.html

	   /*WebRequest serverCheck = WebRequest.Create("http://7xl54r.dl1.z0.glb.clouddn.com/setting/network.html");
            if (serverCheck == null)
                MessageBox.Show("Error!");
            WebResponse serverCkeckRet = serverCheck.GetResponse();
            if (serverCkeckRet.ContentLength == 2)
            {
                skinProgressBar1.Value = 20;
                toolStripStatusLabel2.Text = "连接服务器成功";
            } 
            else
                toolStripStatusLabel2.Text = "连接服务器失败！";
           */

2.服务器网络连接判断 
	System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable();	

3.目录配置
	d:\\CodeJudge_Studio 根目录
	d:\\CodeJudge_Studio\\gcc GCC 编译工具目录


4. 解压文件
		using System;
		using System.Collections.Generic;
		using System.Linq;
		using System.Text;
		using System.IO;
		using System.IO.Compression;
		using SharpCompress.Common;
		using SharpCompress.Archive;

		namespace debug_console
		{
			class Program
			{
				public void unzip(String file, String dir)
				{
					var compressed = ArchiveFactory.Open(file);
					foreach (var entry in compressed.Entries)
					{
						if (!entry.IsDirectory)
						{
							entry.WriteToDirectory(dir, ExtractOptions.ExtractFullPath | ExtractOptions.Overwrite);
							Console.WriteLine(entry.FilePath.ToString());
						}

					}
				}

				static void Main(string[] args)
				{
					Program p=new Program();
					p.unzip("D:\\CodeJudge_Studio\\GCC\\gcc.zip", "D:\\CodeJudge_Studio\\GCC");
				}
			}
		}


5. system.Diagnostics.process 包含进程控制选项 CPU MEMORY
	


#include<stdio.h>


int main(){
    int a,b;
    scanf("%d%d",&a,&b);
    printf("%d",a+b);
    while(1)
        ;
}

#include<stdio.h>


int main(){
    int a,b;
    scanf("%d%d",&a,&b);
    printf("%d",a+b);

}

#include<stdio.h>


int main(){
    int a,b;
    scanf("%d%d",&a,&b);
    printf("%d",a+b);
    int i;
    int num = 0;
    for(i=0;i<1000000;i++)
        if(i%2==0)
            num++;
    //while(1)
    // ;
    
}